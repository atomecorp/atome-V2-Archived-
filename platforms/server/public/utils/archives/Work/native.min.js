Opal.modules.native=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$truthy=Opal.truthy,$send=Opal.send,$range=Opal.range,$hash2=Opal.hash2,$klass=Opal.klass,$gvars=Opal.gvars;return Opal.add_stubs(["$try_convert","$native?","$respond_to?","$to_n","$raise","$inspect","$Native","$proc","$map!","$end_with?","$define_method","$[]","$convert","$call","$to_proc","$new","$each","$native_reader","$native_writer","$extend","$is_a?","$map","$alias_method","$to_a","$_Array","$include","$method_missing","$bind","$instance_method","$slice","$-","$length","$[]=","$enum_for","$===","$>=","$<<","$each_pair","$_initialize","$name","$exiting_mid","$native_module"]),function($base,$parent_nesting){var TMP_Native_is_a$q_1,TMP_Native_try_convert_2,TMP_Native_convert_3,TMP_Native_call_4,TMP_Native_proc_5,TMP_Native_included_19,TMP_Native_initialize_20,TMP_Native_to_n_21,self=$module($base,"Native"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defs(self,"$is_a?",TMP_Native_is_a$q_1=function(object,klass){try{return object instanceof this.$try_convert(klass)}catch(e){return!1}},TMP_Native_is_a$q_1.$$arity=2),Opal.defs(self,"$try_convert",TMP_Native_try_convert_2=function(value,default$){return null==default$&&(default$=nil),this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():default$},TMP_Native_try_convert_2.$$arity=-2),Opal.defs(self,"$convert",TMP_Native_convert_3=function(value){return this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():void this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),value.$inspect()+" isn't native")},TMP_Native_convert_3.$$arity=1),Opal.defs(self,"$call",TMP_Native_call_4=function(obj,key,$a_rest){var args,$iter=TMP_Native_call_4.$$p,block=$iter||nil,$args_len=arguments.length,$rest_len=$args_len-2;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=2;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-2]=arguments[$arg_idx];$iter&&(TMP_Native_call_4.$$p=null);var prop=obj[key];if(prop instanceof Function){for(var converted=new Array(args.length),i=0,l=args.length;i<l;i++){var item=args[i],conv=this.$try_convert(item);converted[i]=conv===nil?item:conv}return block!==nil&&converted.push(block),this.$Native(prop.apply(obj,converted))}return this.$Native(prop)},TMP_Native_call_4.$$arity=-3),Opal.defs(self,"$proc",TMP_Native_proc_5=function(){var TMP_6,$iter=TMP_Native_proc_5.$$p,block=$iter||nil;return $iter&&(TMP_Native_proc_5.$$p=null),$truthy(block)||this.$raise(Opal.const_get_relative($nesting,"LocalJumpError"),"no block given"),$send(Opal.const_get_qualified("::","Kernel"),"proc",[],((TMP_6=function($a_rest){var args,TMP_7,instance,self=TMP_6.$$s||this,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];if($send(args,"map!",[],((TMP_7=function(arg){var self=TMP_7.$$s||this;return null==arg&&(arg=nil),self.$Native(arg)}).$$s=self,TMP_7.$$arity=1,TMP_7)),instance=self.$Native(this),this===Opal.global)return block.apply(self,args);var self_=block.$$s;block.$$s=null;try{return block.apply(instance,args)}finally{block.$$s=self_}}).$$s=this,TMP_6.$$arity=-1,TMP_6))},TMP_Native_proc_5.$$arity=0),function($base,$parent_nesting){var TMP_Helpers_alias_native_11,TMP_Helpers_native_reader_14,TMP_Helpers_native_writer_17,TMP_Helpers_native_accessor_18,self=$module($base,"Helpers"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$alias_native",TMP_Helpers_alias_native_11=function(new$,$old,$kwargs){var TMP_8,TMP_9,TMP_10,$post_args,as,old;if($post_args=Opal.slice.call(arguments,1,arguments.length),null==($kwargs=Opal.extract_kwargs($post_args))||!$kwargs.$$is_hash){if(null!=$kwargs)throw Opal.ArgumentError.$new("expected kwargs");$kwargs=$hash2([],{})}return null==(as=$kwargs.$$smap.as)&&(as=nil),0<$post_args.length&&(old=$post_args.splice(0,1)[0]),null==old&&(old=new$),$truthy(old["$end_with?"]("="))?$send(this,"define_method",[new$],((TMP_8=function(value){var self=TMP_8.$$s||this;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.native[old["$[]"]($range(0,-2,!1))]=Opal.const_get_relative($nesting,"Native").$convert(value),value}).$$s=this,TMP_8.$$arity=1,TMP_8)):$truthy(as)?$send(this,"define_method",[new$],((TMP_9=function($a_rest){var block,args,self=TMP_9.$$s||this,value=nil;null==self.native&&(self.native=nil),(block=TMP_9.$$p||nil)&&(TMP_9.$$p=null);var $args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return $truthy(value=$send(Opal.const_get_relative($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc()))?as.$new(value.$to_n()):nil}).$$s=this,TMP_9.$$arity=-1,TMP_9)):$send(this,"define_method",[new$],((TMP_10=function($a_rest){var block,args,self=TMP_10.$$s||this;null==self.native&&(self.native=nil),(block=TMP_10.$$p||nil)&&(TMP_10.$$p=null);var $args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return $send(Opal.const_get_relative($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc())}).$$s=this,TMP_10.$$arity=-1,TMP_10))},TMP_Helpers_alias_native_11.$$arity=-2),Opal.defn(self,"$native_reader",TMP_Helpers_native_reader_14=function($a_rest){var TMP_12,names,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),names=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)names[$arg_idx-0]=arguments[$arg_idx];return $send(names,"each",[],((TMP_12=function(name){var TMP_13,self=TMP_12.$$s||this;return null==name&&(name=nil),$send(self,"define_method",[name],((TMP_13=function(){var self=TMP_13.$$s||this;return null==self.native&&(self.native=nil),self.$Native(self.native[name])}).$$s=self,TMP_13.$$arity=0,TMP_13))}).$$s=this,TMP_12.$$arity=1,TMP_12))},TMP_Helpers_native_reader_14.$$arity=-1),Opal.defn(self,"$native_writer",TMP_Helpers_native_writer_17=function($a_rest){var TMP_15,names,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),names=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)names[$arg_idx-0]=arguments[$arg_idx];return $send(names,"each",[],((TMP_15=function(name){var TMP_16,self=TMP_15.$$s||this;return null==name&&(name=nil),$send(self,"define_method",[name+"="],((TMP_16=function(value){var self=TMP_16.$$s||this;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.$Native(self.native[name]=value)}).$$s=self,TMP_16.$$arity=1,TMP_16))}).$$s=this,TMP_15.$$arity=1,TMP_15))},TMP_Helpers_native_writer_17.$$arity=-1),Opal.defn(self,"$native_accessor",TMP_Helpers_native_accessor_18=function($a_rest){var names,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),names=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)names[$arg_idx-0]=arguments[$arg_idx];return $send(this,"native_reader",Opal.to_a(names)),$send(this,"native_writer",Opal.to_a(names))},TMP_Helpers_native_accessor_18.$$arity=-1)}($nesting[0],$nesting),Opal.defs(self,"$included",TMP_Native_included_19=function(klass){return klass.$extend(Opal.const_get_relative($nesting,"Helpers"))},TMP_Native_included_19.$$arity=1),Opal.defn(self,"$initialize",TMP_Native_initialize_20=function(native$){return $truthy(Opal.const_get_qualified("::","Kernel")["$native?"](native$))||Opal.const_get_qualified("::","Kernel").$raise(Opal.const_get_relative($nesting,"ArgumentError"),native$.$inspect()+" isn't native"),this.native=native$},TMP_Native_initialize_20.$$arity=1),Opal.defn(self,"$to_n",TMP_Native_to_n_21=function(){return null==this.native&&(this.native=nil),this.native},TMP_Native_to_n_21.$$arity=0)}($nesting[0],$nesting),function($base,$parent_nesting){var TMP_Kernel_native$q_22,TMP_Kernel_Native_25,TMP_Kernel_Array_26,self=$module($base,"Kernel"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$native?",TMP_Kernel_native$q_22=function(value){return null==value||!value.$$class},TMP_Kernel_native$q_22.$$arity=1),Opal.defn(self,"$Native",TMP_Kernel_Native_25=function(obj){var TMP_23,TMP_24;return $truthy(null==obj)?nil:$truthy(this["$native?"](obj))?Opal.const_get_qualified(Opal.const_get_relative($nesting,"Native"),"Object").$new(obj):$truthy(obj["$is_a?"](Opal.const_get_relative($nesting,"Array")))?$send(obj,"map",[],((TMP_23=function(o){var self=TMP_23.$$s||this;return null==o&&(o=nil),self.$Native(o)}).$$s=this,TMP_23.$$arity=1,TMP_23)):$truthy(obj["$is_a?"](Opal.const_get_relative($nesting,"Proc")))?$send(this,"proc",[],((TMP_24=function($a_rest){var block,args,self=TMP_24.$$s||this;(block=TMP_24.$$p||nil)&&(TMP_24.$$p=null);var $args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return self.$Native($send(obj,"call",Opal.to_a(args),block.$to_proc()))}).$$s=this,TMP_24.$$arity=-1,TMP_24)):obj},TMP_Kernel_Native_25.$$arity=1),self.$alias_method("_Array","Array"),Opal.defn(self,"$Array",TMP_Kernel_Array_26=function(object,$a_rest){var args,$iter=TMP_Kernel_Array_26.$$p,block=$iter||nil,$args_len=arguments.length,$rest_len=$args_len-1;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=1;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-1]=arguments[$arg_idx];return $iter&&(TMP_Kernel_Array_26.$$p=null),$truthy(this["$native?"](object))?$send(Opal.const_get_qualified(Opal.const_get_relative($nesting,"Native"),"Array"),"new",[object].concat(Opal.to_a(args)),block.$to_proc()).$to_a():this.$_Array(object)},TMP_Kernel_Array_26.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){function $Object(){}var TMP_Object_$eq$eq_27,TMP_Object_has_key$q_28,TMP_Object_each_29,TMP_Object_$$_30,TMP_Object_$$$eq_31,TMP_Object_merge$B_32,TMP_Object_respond_to$q_33,TMP_Object_respond_to_missing$q_34,TMP_Object_method_missing_35,TMP_Object_nil$q_36,TMP_Object_is_a$q_37,TMP_Object_instance_of$q_38,TMP_Object_class_39,TMP_Object_to_a_40,TMP_Object_inspect_41,self=$Object=$klass($base,$super,"Object",$Object),def=self.$$proto;[self].concat($parent_nesting);def.native=nil,self.$include(Opal.const_get_qualified("::","Native")),Opal.defn(self,"$==",TMP_Object_$eq$eq_27=function(other){return this.native===Opal.const_get_qualified("::","Native").$try_convert(other)},TMP_Object_$eq$eq_27.$$arity=1),Opal.defn(self,"$has_key?",TMP_Object_has_key$q_28=function(name){return Opal.hasOwnProperty.call(this.native,name)},TMP_Object_has_key$q_28.$$arity=1),Opal.alias(self,"key?","has_key?"),Opal.alias(self,"include?","has_key?"),Opal.alias(self,"member?","has_key?"),Opal.defn(self,"$each",TMP_Object_each_29=function($a_rest){var args,$iter=TMP_Object_each_29.$$p,$yield=$iter||nil,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];if($iter&&(TMP_Object_each_29.$$p=null),$yield===nil)return $send(this,"method_missing",["each"].concat(Opal.to_a(args)));for(var key in this.native)Opal.yieldX($yield,[key,this.native[key]]);return this},TMP_Object_each_29.$$arity=-1),Opal.defn(self,"$[]",TMP_Object_$$_30=function(key){var prop=this.native[key];return prop instanceof Function?prop:Opal.const_get_qualified("::","Native").$call(this.native,key)},TMP_Object_$$_30.$$arity=1),Opal.defn(self,"$[]=",TMP_Object_$$$eq_31=function(key,value){var native$;return native$=Opal.const_get_qualified("::","Native").$try_convert(value),$truthy(native$===nil)?this.native[key]=value:this.native[key]=native$},TMP_Object_$$$eq_31.$$arity=2),Opal.defn(self,"$merge!",TMP_Object_merge$B_32=function(other){for(var prop in other=Opal.const_get_qualified("::","Native").$convert(other))this.native[prop]=other[prop];return this},TMP_Object_merge$B_32.$$arity=1),Opal.defn(self,"$respond_to?",TMP_Object_respond_to$q_33=function(name,include_all){return null==include_all&&(include_all=!1),Opal.const_get_qualified("::","Kernel").$instance_method("respond_to?").$bind(this).$call(name,include_all)},TMP_Object_respond_to$q_33.$$arity=-2),Opal.defn(self,"$respond_to_missing?",TMP_Object_respond_to_missing$q_34=function(name,include_all){return null==include_all&&(include_all=!1),Opal.hasOwnProperty.call(this.native,name)},TMP_Object_respond_to_missing$q_34.$$arity=-2),Opal.defn(self,"$method_missing",TMP_Object_method_missing_35=function(mid,$a_rest){var args,$iter=TMP_Object_method_missing_35.$$p,block=$iter||nil,$writer=nil,$args_len=arguments.length,$rest_len=$args_len-1;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=1;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-1]=arguments[$arg_idx];return $iter&&(TMP_Object_method_missing_35.$$p=null),"="===mid.charAt(mid.length-1)?($writer=[mid.$slice(0,$rb_minus(mid.$length(),1)),args["$[]"](0)],$send(this,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]):$send(Opal.const_get_qualified("::","Native"),"call",[this.native,mid].concat(Opal.to_a(args)),block.$to_proc())},TMP_Object_method_missing_35.$$arity=-2),Opal.defn(self,"$nil?",TMP_Object_nil$q_36=function(){return!1},TMP_Object_nil$q_36.$$arity=0),Opal.defn(self,"$is_a?",TMP_Object_is_a$q_37=function(klass){return Opal.is_a(this,klass)},TMP_Object_is_a$q_37.$$arity=1),Opal.alias(self,"kind_of?","is_a?"),Opal.defn(self,"$instance_of?",TMP_Object_instance_of$q_38=function(klass){return this.$$class===klass},TMP_Object_instance_of$q_38.$$arity=1),Opal.defn(self,"$class",TMP_Object_class_39=function(){return this.$$class},TMP_Object_class_39.$$arity=0),Opal.defn(self,"$to_a",TMP_Object_to_a_40=function(options){var $iter=TMP_Object_to_a_40.$$p,block=$iter||nil;return null==options&&(options=$hash2([],{})),$iter&&(TMP_Object_to_a_40.$$p=null),$send(Opal.const_get_qualified(Opal.const_get_qualified("::","Native"),"Array"),"new",[this.native,options],block.$to_proc()).$to_a()},TMP_Object_to_a_40.$$arity=-1),Opal.defn(self,"$inspect",TMP_Object_inspect_41=function(){return"#<Native:"+String(this.native)+">"},TMP_Object_inspect_41.$$arity=0)}(Opal.const_get_relative($nesting,"Native"),Opal.const_get_relative($nesting,"BasicObject"),$nesting),function($base,$super,$parent_nesting){function $Array(){}var TMP_Array_initialize_42,TMP_Array_each_43,TMP_Array_$$_44,TMP_Array_$$$eq_45,TMP_Array_last_46,TMP_Array_length_47,TMP_Array_inspect_48,self=$Array=$klass($base,null,"Array",$Array),def=self.$$proto,$nesting=[self].concat($parent_nesting);def.named=def.native=def.get=def.block=def.set=def.length=nil,self.$include(Opal.const_get_relative($nesting,"Native")),self.$include(Opal.const_get_relative($nesting,"Enumerable")),Opal.defn(self,"$initialize",TMP_Array_initialize_42=function(native$,options){var $a,$iter=TMP_Array_initialize_42.$$p,block=$iter||nil;return null==options&&(options=$hash2([],{})),$iter&&(TMP_Array_initialize_42.$$p=null),$send(this,Opal.find_super_dispatcher(this,"initialize",TMP_Array_initialize_42,!1),[native$],null),this.get=$truthy($a=options["$[]"]("get"))?$a:options["$[]"]("access"),this.named=options["$[]"]("named"),this.set=$truthy($a=options["$[]"]("set"))?$a:options["$[]"]("access"),this.length=$truthy($a=options["$[]"]("length"))?$a:"length",this.block=block,$truthy(null==this.$length())?this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"no length found on the array-like object"):nil},TMP_Array_initialize_42.$$arity=-2),Opal.defn(self,"$each",TMP_Array_each_43=function(){var $iter=TMP_Array_each_43.$$p,block=$iter||nil;if($iter&&(TMP_Array_each_43.$$p=null),!$truthy(block))return this.$enum_for("each");for(var i=0,length=this.$length();i<length;i++)Opal.yield1(block,this["$[]"](i));return this},TMP_Array_each_43.$$arity=0),Opal.defn(self,"$[]",TMP_Array_$$_44=function(index){var self=this,result=nil,$case=nil;return $case=index,result=Opal.const_get_relative($nesting,"String")["$==="]($case)||Opal.const_get_relative($nesting,"Symbol")["$==="]($case)?$truthy(self.named)?self.native[self.named](index):self.native[index]:Opal.const_get_relative($nesting,"Integer")["$==="]($case)?$truthy(self.get)?self.native[self.get](index):self.native[index]:nil,$truthy(result)?$truthy(self.block)?self.block.$call(result):self.$Native(result):nil},TMP_Array_$$_44.$$arity=1),Opal.defn(self,"$[]=",TMP_Array_$$$eq_45=function(index,value){return $truthy(this.set)?this.native[this.set](index,Opal.const_get_relative($nesting,"Native").$convert(value)):this.native[index]=Opal.const_get_relative($nesting,"Native").$convert(value)},TMP_Array_$$$eq_45.$$arity=2),Opal.defn(self,"$last",TMP_Array_last_46=function(count){var lhs,rhs,index=nil,result=nil;if(null==count&&(count=nil),$truthy(count)){for(index=$rb_minus(this.$length(),1),result=[];$truthy((rhs=0,"number"==typeof(lhs=index)&&"number"==typeof rhs?rhs<=lhs:lhs["$>="](rhs)));)result["$<<"](this["$[]"](index)),index=$rb_minus(index,1);return result}return this["$[]"]($rb_minus(this.$length(),1))},TMP_Array_last_46.$$arity=-1),Opal.defn(self,"$length",TMP_Array_length_47=function(){return this.native[this.length]},TMP_Array_length_47.$$arity=0),Opal.alias(self,"to_ary","to_a"),Opal.defn(self,"$inspect",TMP_Array_inspect_48=function(){return this.$to_a().$inspect()},TMP_Array_inspect_48.$$arity=0)}(Opal.const_get_relative($nesting,"Native"),0,$nesting),function($base,$super,$parent_nesting){function $Numeric(){}var TMP_Numeric_to_n_49,self=$Numeric=$klass($base,null,"Numeric",$Numeric);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_Numeric_to_n_49=function(){return this.valueOf()},TMP_Numeric_to_n_49.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Proc(){}var TMP_Proc_to_n_50,self=$Proc=$klass($base,null,"Proc",$Proc);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_Proc_to_n_50=function(){return this},TMP_Proc_to_n_50.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $String(){}var TMP_String_to_n_51,self=$String=$klass($base,null,"String",$String);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_String_to_n_51=function(){return this.valueOf()},TMP_String_to_n_51.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Regexp(){}var TMP_Regexp_to_n_52,self=$Regexp=$klass($base,null,"Regexp",$Regexp);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_Regexp_to_n_52=function(){return this.valueOf()},TMP_Regexp_to_n_52.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $MatchData(){}var TMP_MatchData_to_n_53,self=$MatchData=$klass($base,null,"MatchData",$MatchData),def=self.$$proto;[self].concat($parent_nesting);def.matches=nil,Opal.defn(self,"$to_n",TMP_MatchData_to_n_53=function(){return this.matches},TMP_MatchData_to_n_53.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Struct(){}var TMP_Struct_to_n_55,self=$Struct=$klass($base,null,"Struct",$Struct),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$to_n",TMP_Struct_to_n_55=function(){var TMP_54,result=nil;return result={},$send(this,"each_pair",[],((TMP_54=function(name,value){TMP_54.$$s;return null==name&&(name=nil),null==value&&(value=nil),result[name]=Opal.const_get_relative($nesting,"Native").$try_convert(value,value)}).$$s=this,TMP_54.$$arity=2,TMP_54)),result},TMP_Struct_to_n_55.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Array(){}var TMP_Array_to_n_56,self=$Array=$klass($base,null,"Array",$Array),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$to_n",TMP_Array_to_n_56=function(){for(var result=[],i=0,length=this.length;i<length;i++){var obj=this[i];result.push(Opal.const_get_relative($nesting,"Native").$try_convert(obj,obj))}return result},TMP_Array_to_n_56.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Boolean(){}var TMP_Boolean_to_n_57,self=$Boolean=$klass($base,null,"Boolean",$Boolean);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_Boolean_to_n_57=function(){return this.valueOf()},TMP_Boolean_to_n_57.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Time(){}var TMP_Time_to_n_58,self=$Time=$klass($base,null,"Time",$Time);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_Time_to_n_58=function(){return this},TMP_Time_to_n_58.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $NilClass(){}var TMP_NilClass_to_n_59,self=$NilClass=$klass($base,null,"NilClass",$NilClass);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$to_n",TMP_NilClass_to_n_59=function(){return null},TMP_NilClass_to_n_59.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Hash(){}var TMP_Hash_initialize_60,TMP_Hash_to_n_61,self=$Hash=$klass($base,null,"Hash",$Hash),$nesting=(self.$$proto,[self].concat($parent_nesting));self.$alias_method("_initialize","initialize"),Opal.defn(self,"$initialize",TMP_Hash_initialize_60=function(defaults){var self=this,$iter=TMP_Hash_initialize_60.$$p,block=$iter||nil;if($iter&&(TMP_Hash_initialize_60.$$p=null),null==defaults||void 0!==defaults.constructor&&defaults.constructor!==Object)return $send(self,"_initialize",[defaults],block.$to_proc());var key,value,smap=self.$$smap,keys=self.$$keys;for(key in defaults)!(value=defaults[key])||void 0!==value.constructor&&value.constructor!==Object?value&&value.$$is_array?(value=value.map(function(item){return!item||void 0!==item.constructor&&item.constructor!==Object?self.$Native(item):Opal.const_get_relative($nesting,"Hash").$new(item)}),smap[key]=value):smap[key]=self.$Native(value):smap[key]=Opal.const_get_relative($nesting,"Hash").$new(value),keys.push(key);return self},TMP_Hash_initialize_60.$$arity=-1),Opal.defn(self,"$to_n",TMP_Hash_to_n_61=function(){for(var key,value,result={},keys=this.$$keys,smap=this.$$smap,i=0,length=keys.length;i<length;i++)value=(key=keys[i]).$$is_string?smap[key]:(key=key.key).value,result[key]=Opal.const_get_relative($nesting,"Native").$try_convert(value,value);return result},TMP_Hash_to_n_61.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Module(){}var TMP_Module_native_module_62,self=$Module=$klass($base,null,"Module",$Module);self.$$proto,[self].concat($parent_nesting);Opal.defn(self,"$native_module",TMP_Module_native_module_62=function(){return Opal.global[this.$name()]=this},TMP_Module_native_module_62.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){function $Class(){}var TMP_Class_native_alias_63,TMP_Class_native_class_64,self=$Class=$klass($base,null,"Class",$Class),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$native_alias",TMP_Class_native_alias_63=function(new_jsid,existing_mid){var aliased=this.$$proto["$"+existing_mid];aliased||this.$raise(Opal.const_get_relative($nesting,"NameError").$new("undefined method `"+existing_mid+"' for class `"+this.$inspect()+"'",this.$exiting_mid())),this.$$proto[new_jsid]=aliased},TMP_Class_native_alias_63.$$arity=2),Opal.defn(self,"$native_class",TMP_Class_native_class_64=function(){return this.$native_module(),this.new=this.$new},TMP_Class_native_class_64.$$arity=0)}($nesting[0],0,$nesting),$gvars.$=$gvars.global=self.$Native(Opal.global)};
